FROM ubuntu:24.04

ARG DEBIAN_FRONTEND=noninteractive

WORKDIR /opt

# 安装系统工具和依赖
RUN set -eux; \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        wget \
        tar \
        git \
        sudo \
        libglib2.0-0 \
        libkrb5-3 \
        libgssapi-krb5-2 \
        libicu-dev \
    && rm -rf /var/lib/apt/lists/*

# 安装 nvm 和 Node.js
ENV NVM_DIR=/usr/local/nvm
ENV NODE_VERSION=18.20.7

RUN mkdir -p $NVM_DIR \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    && . $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default



# 使用构建上下文中的 tgz，ADD 会在目标自动解压（确保构建上下文包含 hbuilderx/hbuilderx-linux.3.98.tgz）
ADD hbuilderx/hbuilderx-linux-3.98.tgz /usr/local/

# 如果解压后目录名为 HBuilderX，则重命名为 hbuilderx-linux 以保持原先路径一致
RUN if [ -d /usr/local/HBuilderX ] && [ ! -d /usr/local/hbuilderx-linux ]; then mv /usr/local/HBuilderX /usr/local/hbuilderx-linux; fi

# 不创建非 root 用户，构建与运行均以 root 执行（测试阶段）

# 将 NVM_DIR 放到全局目录，构建与运行均使用 root（更快，适合测试阶段）
ENV NVM_DIR=/usr/local/nvm \
    NODE_PATH=/usr/local/nvm/versions/node/v$NODE_VERSION/lib/node_modules \
    PATH=/usr/local/hbuilderx-linux:/usr/local/nvm/versions/node/v$NODE_VERSION/bin:$PATH

# 保持工作目录为 /opt，构建与运行都用 root
WORKDIR /opt

# 在 root 下安装全局 npm 包并配置 uapp
RUN npm install -g uapp && \
    uapp sdk init && \
    uapp config node `which node` && \
    uapp config hbx.dir /usr/local/hbuilderx-linux

CMD ["bash"]

